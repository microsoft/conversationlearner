version: 2.1

# https://circleci.com/docs/2.0/reusing-config/#the-commands-key
commands:
  run_bot_and_ui:
    description: "Runs the sample bot and the UI to allow E2E test to be run."
    steps:
      # Run the sample
      - run:
          command: npm run test-apicallbacks > start.txt
          background: true
          working_directory: packages/samples

      # Run UI
      - run:
          command: npm start
          background: true
          working_directory: packages/ui

      # Ensure bot and ui are running
      # TODO: Find out why this fails.
      # For some reason this times out as failure even though the bot is running and request should succeed
      # - run: npx wait-on -- http://localhost:3978
      - run: npx wait-on -- http://localhost:3000

  save_test_results:
    description: "Save artifacts and test results"
    steps:
      - store_artifacts:
          path: packages/ui/results

      - store_artifacts:
          path: packages/ui/cypress/videos

      - store_artifacts:
          path: packages/ui/cypress/screenshots

      - store_test_results:
          path: packages/ui/results

  create_concatenated_package_lock:
    description: "Concatenate all package-lock.json files recognized by lerna.js into single file. File is used as checksum source for part of caching key."
    parameters:
      filename:
        type: string
    steps:
      - run:
          name: Combine package-lock.json files to single file
          command: npx lerna list -p -a | awk -F packages '{printf "\"packages%s/package-lock.json\" ", $2}' | xargs cat > << parameters.filename >>

jobs:
  build:
    docker:
      - image: circleci/node:lts
    steps:
      - checkout

      - create_concatenated_package_lock:
          filename: combined-package-lock.txt

      - run: npx lerna list --toposort -a

      - restore_cache:
          keys:
            - v3-deps-{{ checksum "package-lock.json" }}-{{ checksum "combined-package-lock.txt" }}
            - v3-deps

      - run: node --version
      - run: npm --version

      - run: npm ci
      - run: npx lerna bootstrap

      - save_cache:
          key: v3-deps-{{ checksum "package-lock.json" }}-{{ checksum "combined-package-lock.txt" }}
          paths:
            - ~/.npm
            - ~/.cache

      - run: npx lerna run build
      - run: npx lerna run test --ignore @conversationlearner/webchat
      - run: npx lerna run report-coverage

  test-smoke:
    docker:
      - image: cypress/browsers:node12.13.0-chrome78-ff70
        environment:
          # this enables colors in the output
          TERM: xterm
          # https://github.com/cypress-io/cypress/issues/350
          ipc: host
    # parallelism: 1

    steps:
      - checkout

      - create_concatenated_package_lock:
          filename: combined-package-lock.txt

      - restore_cache:
          keys:
            - v3-deps-{{ checksum "package-lock.json" }}-{{ checksum "combined-package-lock.txt" }}
            - v3-deps

      - run: npm ci
      - run: npx lerna bootstrap
      - run: npx lerna run build

      # Setup for e2e tests
      - run: node .circleci/SetLuisAuthoringKey.js >> $BASH_ENV
      - run_bot_and_ui

      - run:
          command: npm run cypress -- run --record false --spec "cypress/integration/Tools/DeleteAllTestGeneratedModels.spec.js"
          when: always
          working_directory: packages/ui

      # Run smoke tests against sample
      - run:
          command: npm run cypress -- run --record false --spec "cypress/integration/smoke/required/**/*.spec.*"
          working_directory: packages/ui

      - save_test_results

  test-regression:
    docker:
      - image: cypress/browsers:node12.13.0-chrome78-ff70
        environment:
          # this enables colors in the output
          TERM: xterm
          # https://github.com/cypress-io/cypress/issues/350
          ipc: host
    # parallelism: 1

    steps:
      - checkout

      - create_concatenated_package_lock:
          filename: combined-package-lock.txt

      - restore_cache:
          keys:
            - v3-deps-{{ checksum "package-lock.json" }}-{{ checksum "combined-package-lock.txt" }}
            - v3-deps

      - run: npm ci
      - run: npx lerna bootstrap
      - run: npx lerna run build

      # Setup for e2e tests
      - run: node .circleci/SetLuisAuthoringKey.js >> $BASH_ENV
      - run_bot_and_ui

      # Run Regression Tests
      - run:
          command: npm run cypress -- run --record false --spec  "cypress/integration/Regression/**/*.spec.js"
          working_directory: packages/ui

      - save_test_results

      - run:
          command: npm run cypress -- run --record false --spec  "cypress/integration/regressionTs/**/*.spec.*"
          when: always
          working_directory: packages/ui

      - save_test_results

      - run:
          command: npm run cypress -- run --record false --spec "cypress/integration/Tools/DeleteAllTestGeneratedModels.spec.js"
          when: always
          working_directory: packages/ui

      - save_test_results

  test-release:
    docker:
      - image: cypress/browsers:node12.13.0-chrome78-ff70
        environment:
          # this enables colors in the output
          TERM: xterm
          # https://github.com/cypress-io/cypress/issues/350
          ipc: host
    # parallelism: 1

    steps:
      - checkout

      - create_concatenated_package_lock:
          filename: combined-package-lock.txt

      - restore_cache:
          keys:
            - v3-deps-{{ checksum "package-lock.json" }}-{{ checksum "combined-package-lock.txt" }}
            - v3-deps

      - run: npm ci
      - run: npx lerna bootstrap
      - run: npx lerna run build

      # Setup for e2e tests
      - run: node .circleci/SetLuisAuthoringKey.js >> $BASH_ENV

      # Run the Bot (Only need Bot not UI for testing release)
      - run:
          command: npm run test-apicallbacks > start.txt
          background: true
          working_directory: packages/samples

      - run: npx wait-on -- http://localhost:3978

      - run:
          command: npm run cypress -- run --record false --spec  "cypress/integration/release/**/*.spec.*" --config "baseUrl=http://localhost:3978"
          working_directory: packages/ui

      - save_test_results

  deploy:
    parameters:
      clone_path:
        type: string
        default: ../temp-samples-repo-${CIRCLE_BUILD_NUM}
    docker:
      - image: cypress/browsers:node12.13.0-chrome78-ff70
        environment:
          TERM: xterm
    steps:
      - checkout

      - create_concatenated_package_lock:
          filename: combined-package-lock.txt

      - restore_cache:
          keys:
            - v3-deps-{{ checksum "package-lock.json" }}-{{ checksum "combined-package-lock.txt" }}
            - v3-deps

      # Needed so projects can run scripts (specifically UI needs typescript)
      - run: npm ci
      - run: npx lerna bootstrap
      - run: npx lerna run build

      # Add key with Write permissions in order to run `lerna publish` which pushes commits
      - add_ssh_keys:
          fingerprints:
            - "7f:27:5b:06:05:84:80:6d:f9:7e:a7:f9:4c:ef:a9:d0"

      # Setup git commit info
      - run: git config --global user.email "mattm@microsoft.com"
      - run: git config --global user.name "Conversation Learner Build"

      # https://circleci.com/blog/publishing-npm-packages-using-circleci-2-0/
      - run: npm set //registry.npmjs.org/:_authToken=${NPM_TOKEN}
      - run: npx lerna publish --yes --conventional-commits --create-release github

      # Use Personal Access Token to access different repo
      # https://github.blog/2012-09-21-easier-builds-and-deployments-using-git-over-https-and-oauth/
      # Copy files from packages/samples on top of fresh clone of samples and then push the changes.
      # Investigated submodules and subtrees but neither seemed offer simplicity that we want while still keeping this repo as source of truth
      # TODO: Look at using token only in git push instead of clone so it's not stored
      # E.g. 'git pull https://<token>@github.com/username/bar.git'
      - run: git clone https://${GH_TOKEN_SAMPLES}@github.com/microsoft/ConversationLearner-Samples << parameters.clone_path >> -b develop
      # TODO: Try to consolidate to single copy command
      - run: cp ./packages/samples/src/ << parameters.clone_path >> -frv
      - run: cp ./packages/samples/*.* << parameters.clone_path >> -fv
      - run:
          command: |
            cd << parameters.clone_path >>
            git add -A
            git status --short

      # If there are changes, commit and push the changes
      - run:
          command: |
            cd << parameters.clone_path >>
            git commit -m "Update Samples ${CIRCLE_BUILD_NUM}" -m "${CIRCLE_BUILD_URL} ${CIRCLE_COMPARE_URL}" && git push || echo "Nothing to commit"

workflows:
  build-test-deploy:
    jobs:
      - build
      - test-smoke:
          requires:
            - build
      - test-regression:
          requires:
            - build
      - test-release:
          requires:
            - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - master
